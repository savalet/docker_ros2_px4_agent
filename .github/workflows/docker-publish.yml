name: Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  INSTANCE_ID: i-0790c86d55bd21d78
  AWS_REGION: eu-west-3

jobs:
  # -----------------------------
  # Job 1: Start Spot EC2
  # -----------------------------
  start-spot:
    runs-on: ubuntu-latest
    outputs:
      ec2_ready: true
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Start Spot EC2
        run: |
          echo "Starting EC2 Spot instance $INSTANCE_ID..."
          aws ec2 start-instances --instance-ids $INSTANCE_ID --region $AWS_REGION
          aws ec2 wait instance-running --instance-ids $INSTANCE_ID --region $AWS_REGION
          echo "EC2 Spot instance is running."

  # -----------------------------
  # Job 2: Build Docker on Spot
  # -----------------------------
  build-docker:
    needs: start-spot
    runs-on: [self-hosted, ARM64]
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb62
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51f

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

  # -----------------------------
  # Job 3: Stop Spot EC2
  # -----------------------------
  stop-spot:
    needs: build-docker
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Stop Spot EC2
        run: |
          echo "Stopping EC2 Spot instance $INSTANCE_ID..."
          aws ec2 stop-instances --instance-ids $INSTANCE_ID --region $AWS_REGION
          aws ec2 wait instance-stopped --instance-ids $INSTANCE_ID --region $AWS_REGION
          echo "EC2 Spot instance stopped."